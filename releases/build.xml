<project name="Guanxi Release" default="help">
  <!-- This file contains static locations for the Guanxi modules -->
  <property file="build.properties" />

  <!-- These files are module release specific -->
  <property file="${release.properties.dir}/sp.release.properties" />
  <property file="${release.properties.dir}/idp.release.properties" />
  <property file="${release.properties.dir}/wayf.release.properties" />
  <property file="${release.properties.dir}/samuel.release.properties" />

  <!-- Sourceforge anonymous user checkout details -->
  <property name="cvs.anon" value=":pserver:anonymous@cvs.sourceforge.net:/cvsroot/guanxi" />
  <property name="cvs.anon.password" value="" />

  <!-- Sourceforge CVS user checkout details -->
  <property name="cvs.user" value=":ext:${release.user}@cvs.sourceforge.net:/cvsroot/guanxi" />
  <property name="cvs.user.password" value="${release.user.password}" />

  <!-- Which CVS user to use for checking out modules -->
  <property name="cvs.root" value="${cvs.user}" />
  <property name="cvs.root.password" value="${cvs.user.password}" />

  <!-- Where the modules are checked out to in the checkout directory -->
  <property name="core.dir" value="${tmp.dir}/${tmp.guanxi-core.home}" />
  <property name="samuel.dir" value="${tmp.dir}/${tmp.samuel.home}" />
  <property name="common.dir" value="${tmp.dir}/${tmp.guanxi-common.home}" />
  <property name="idp.dir" value="${tmp.dir}/${tmp.guanxi-idp.home}" />
  <property name="wayf.dir" value="${tmp.dir}/${tmp.guanxi-wayf.home}" />
  <property name="sp.dir" value="${tmp.dir}/${tmp.guanxi-sp.home}" />

  <!-- Displays instructions on how to use this build file -->
  <target name="help" description="Explains this build file">
    <echo>
      Guanxi release system

      The following targets are available for building release versions
      of the Guanxi components:

      ant release-idp    : Build source and binary releases of the IdP
      ant release-sp     : Build source and binary releases of the SP Engine and Guard
      ant release-wayf   : Build source and binary releases of the WAYF
      ant release-samuel : Build source and binary releases of SAMUEL

      To configure releases have a look at howto.txt
    </echo>
  </target>

  <target name="release-idp" description="Builds a release of the Guanxi IdP">

    <!-- Where the IdP release files will be -->
    <property name="idp.release.dir" value="guanxi-idp-release-${release.version}" />

    <echo>
      Building Guanxi IdP ${release.version} on ${release.date}

      Using tags:
        -- Guanxi::IdP    : ${release.idp.cvs.tag}
        -- Guanxi::Core   : ${release.core.cvs.tag}
        -- Guanxi::Common : ${release.common.cvs.tag}
        -- SAMUEL         : ${release.samuel.cvs.tag}
        -- gx_lib         : ${release.gx_lib.cvs.tag}
    </echo>

    <delete dir="${tmp.dir}" />
    <mkdir dir="${idp.release.dir}" />
    <mkdir dir="${tmp.dir}" />

    <!-- Get the common modules from CVS -->
    <antcall target="getCommonModules" />

    <!-- Get Guanxi::IdP from CVS -->
    <antcall target="getIdP" />

    <!-- Clean out any old builds -->
    <ant antfile="build.xml" dir="${tmp.dir}/${tmp.guanxi-idp.home}" target="clean"/>
    <ant antfile="build.xml" dir="${tmp.dir}/${tmp.guanxi-common.home}" target="clean"/>
    <ant antfile="build.xml" dir="${tmp.dir}/${tmp.samuel.home}" target="clean"/>

    <!-- Build a source release archive -->
    <copy todir="${idp.release.dir}/guanxi-idp-src-${release.version}">
      <fileset dir="${tmp.dir}">
        <include name="${tmp.guanxi-core.home}/**"/>
        <include name="${tmp.guanxi-common.home}/**"/>
        <include name="${tmp.samuel.home}/**"/>
        <include name="${tmp.guanxi-gx_lib.home}/**"/>
        <include name="${tmp.guanxi-idp.home}/**"/>
      </fileset>
    </copy>
    <tar tarfile="${idp.release.dir}/guanxi-idp-src-${release.version}.tar">
      <tarfileset dir="${idp.release.dir}">
        <include name="guanxi-idp-src-${release.version}/**"/>
      </tarfileset>
    </tar>
    <gzip zipfile="${idp.release.dir}/guanxi-idp-src-${release.version}.tar.gz" src="${idp.release.dir}/guanxi-idp-src-${release.version}.tar" />

    <!-- Use the Core module to build the SP Engine and Guard -->
    <ant antfile="build.xml" dir="${core.dir}" target="idp"/>

    <!-- Build a binary release archive -->
    <copy todir="${idp.release.dir}/guanxi-idp-bin-${release.version}">
      <fileset dir="${tmp.dir}/${tmp.guanxi-idp.bin.dir}">
        <include name="**"/>
      </fileset>
    </copy>
    <tar tarfile="${idp.release.dir}/guanxi-idp-bin-${release.version}.tar">
      <tarfileset dir="${idp.release.dir}">
        <include name="guanxi-idp-bin-${release.version}/**"/>
      </tarfileset>
    </tar>
    <gzip zipfile="${idp.release.dir}/guanxi-idp-bin-${release.version}.tar.gz" src="${idp.release.dir}/guanxi-idp-bin-${release.version}.tar" />

    <!-- Copy the config files to build this release again -->
    <antcall target="copyBuildFiles">
      <param name="module.release.dir" value="${idp.release.dir}" />
      <param name="properties.file" value="${release.properties.dir}/idp.release.properties" />
    </antcall>

    <!-- Tidy up -->
    <delete file="${idp.release.dir}/guanxi-idp-bin-${release.version}.tar" />
    <delete dir="${idp.release.dir}/guanxi-idp-bin-${release.version}" />
    <delete file="${idp.release.dir}/guanxi-idp-src-${release.version}.tar" />
    <delete dir="${idp.release.dir}/guanxi-idp-src-${release.version}" />
  </target>

  <target name="release-sp" description="Builds a release of the Guanxi SP">

    <!-- Where the SP release files will be -->
    <property name="sp.release.dir" value="guanxi-sp-bin-${release.version}" />

    <echo>
      Building Guanxi SP ${release.version} on ${release.date}

      Using tags:
        -- Guanxi::SP     : ${release.sp.cvs.tag}
        -- Guanxi::Core   : ${release.core.cvs.tag}
        -- Guanxi::Common : ${release.common.cvs.tag}
        -- SAMUEL         : ${release.samuel.cvs.tag}
        -- gx_lib         : ${release.gx_lib.cvs.tag}
    </echo>

    <delete dir="${tmp.dir}" />
    <mkdir dir="${sp.release.dir}" />
    <mkdir dir="${tmp.dir}" />

    <!-- Get the common modules from CVS -->
    <antcall target="getCommonModules" />

    <!-- Get Guanxi::SP from CVS -->
    <antcall target="getSP" />

    <!-- Clean out any old builds -->
    <ant antfile="build.xml" dir="${tmp.dir}/${tmp.guanxi-sp.home}" target="clean"/>
    <ant antfile="build.xml" dir="${tmp.dir}/${tmp.guanxi-common.home}" target="clean"/>
    <ant antfile="build.xml" dir="${tmp.dir}/${tmp.samuel.home}" target="clean"/>

    <!-- Build a source release archive -->
    <copy todir="${sp.release.dir}/guanxi-sp-src-${release.version}">
      <fileset dir="${tmp.dir}">
        <include name="${tmp.guanxi-core.home}/**"/>
        <include name="${tmp.guanxi-common.home}/**"/>
        <include name="${tmp.samuel.home}/**"/>
        <include name="${tmp.guanxi-gx_lib.home}/**"/>
        <include name="${tmp.guanxi-sp.home}/**"/>
      </fileset>
    </copy>
    <tar tarfile="${sp.release.dir}/guanxi-sp-src-${release.version}.tar">
      <tarfileset dir="${sp.release.dir}">
        <include name="guanxi-sp-src-${release.version}/**"/>
      </tarfileset>
    </tar>
    <gzip zipfile="${sp.release.dir}/guanxi-sp-src-${release.version}.tar.gz" src="${sp.release.dir}/guanxi-sp-src-${release.version}.tar" />

    <!-- Use the Core module to build the SP Engine and Guard -->
    <ant antfile="build.xml" dir="${core.dir}" target="sp-guard"/>
    <ant antfile="build.xml" dir="${core.dir}" target="sp-engine"/>

    <!-- Build a Guard binary release archive -->
    <copy todir="${sp.release.dir}/guanxi-sp-guard-bin-${release.version}">
      <fileset dir="${tmp.dir}/${tmp.guanxi-sp-guard.bin.dir}">
        <include name="**"/>
      </fileset>
    </copy>
    <tar tarfile="${sp.release.dir}/guanxi-sp-guard-bin-${release.version}.tar">
      <tarfileset dir="${sp.release.dir}">
        <include name="guanxi-sp-guard-bin-${release.version}/**"/>
      </tarfileset>
    </tar>
    <gzip zipfile="${sp.release.dir}/guanxi-sp-guard-bin-${release.version}.tar.gz" src="${sp.release.dir}/guanxi-sp-guard-bin-${release.version}.tar" />

    <!-- Build an Engine binary release archive -->
    <copy todir="${sp.release.dir}/guanxi-sp-engine-bin-${release.version}" includeEmptyDirs="true">
      <fileset dir="${tmp.dir}/${tmp.guanxi-sp-engine.bin.dir}">
        <include name="**"/>
      </fileset>
    </copy>
    <tar tarfile="${sp.release.dir}/guanxi-sp-engine-bin-${release.version}.tar">
      <tarfileset dir="${sp.release.dir}">
        <include name="guanxi-sp-engine-bin-${release.version}/**"/>
      </tarfileset>
    </tar>
    <gzip zipfile="${sp.release.dir}/guanxi-sp-engine-bin-${release.version}.tar.gz" src="${sp.release.dir}/guanxi-sp-engine-bin-${release.version}.tar" />

    <!-- Copy the config files to build this release again -->
    <antcall target="copyBuildFiles">
      <param name="module.release.dir" value="${sp.release.dir}" />
      <param name="properties.file" value="${release.properties.dir}/sp.release.properties" />
    </antcall>

    <!-- Tidy up -->
    <delete file="${sp.release.dir}/guanxi-sp-guard-bin-${release.version}.tar" />
    <delete dir="${sp.release.dir}/guanxi-sp-guard-bin-${release.version}" />
    <delete file="${sp.release.dir}/guanxi-sp-engine-bin-${release.version}.tar" />
    <delete dir="${sp.release.dir}/guanxi-sp-engine-bin-${release.version}" />
    <delete file="${sp.release.dir}/guanxi-sp-src-${release.version}.tar" />
    <delete dir="${sp.release.dir}/guanxi-sp-src-${release.version}" />
  </target>

  <target name="release-wayf" description="Builds a release of the Guanxi WAYF">

    <!-- Where the WAYF release files will be -->
    <property name="wayf.release.dir" value="guanxi-wayf-bin-${release.version}" />

    <echo>
      Building Guanxi WAYF ${release.version} on ${release.date}

      Using tags:
        -- Guanxi::WAYF   : ${release.wayf.cvs.tag}
        -- Guanxi::Core   : ${release.core.cvs.tag}
        -- Guanxi::Common : ${release.common.cvs.tag}
        -- SAMUEL         : ${release.samuel.cvs.tag}
        -- gx_lib         : ${release.gx_lib.cvs.tag}
    </echo>

    <delete dir="${tmp.dir}" />
    <mkdir dir="${wayf.release.dir}" />
    <mkdir dir="${tmp.dir}" />

    <!-- Get the common modules from CVS -->
    <antcall target="getCommonModules" />

    <!-- Get Guanxi::WAYF from CVS -->
    <antcall target="getWAYF" />

    <!-- Clean out any old builds -->
    <ant antfile="build.xml" dir="${tmp.dir}/${tmp.guanxi-wayf.home}" target="clean"/>
    <ant antfile="build.xml" dir="${tmp.dir}/${tmp.guanxi-common.home}" target="clean"/>
    <ant antfile="build.xml" dir="${tmp.dir}/${tmp.samuel.home}" target="clean"/>

    <!-- Build a source release archive -->
    <copy todir="${wayf.release.dir}/guanxi-wayf-src-${release.version}">
      <fileset dir="${tmp.dir}">
        <include name="${tmp.guanxi-core.home}/**"/>
        <include name="${tmp.guanxi-common.home}/**"/>
        <include name="${tmp.samuel.home}/**"/>
        <include name="${tmp.guanxi-gx_lib.home}/**"/>
        <include name="${tmp.guanxi-wayf.home}/**"/>
      </fileset>
    </copy>
    <tar tarfile="${wayf.release.dir}/guanxi-wayf-src-${release.version}.tar">
      <tarfileset dir="${wayf.release.dir}">
        <include name="guanxi-wayf-src-${release.version}/**"/>
      </tarfileset>
    </tar>
    <gzip zipfile="${wayf.release.dir}/guanxi-wayf-src-${release.version}.tar.gz" src="${wayf.release.dir}/guanxi-wayf-src-${release.version}.tar" />

    <!-- Use the Core module to build the WAYF -->
    <ant antfile="build.xml" dir="${core.dir}" target="wayf"/>

    <!-- Build a binary release archive -->
    <copy todir="${wayf.release.dir}/guanxi-wayf-bin-${release.version}">
      <fileset dir="${tmp.dir}/${tmp.guanxi-wayf.bin.dir}">
        <include name="**"/>
      </fileset>
    </copy>
    <tar tarfile="${wayf.release.dir}/guanxi-wayf-bin-${release.version}.tar">
      <tarfileset dir="${wayf.release.dir}">
        <include name="guanxi-wayf-bin-${release.version}/**"/>
      </tarfileset>
    </tar>
    <gzip zipfile="${wayf.release.dir}/guanxi-wayf-bin-${release.version}.tar.gz" src="${wayf.release.dir}/guanxi-wayf-bin-${release.version}.tar" />

    <!-- Copy the config files to build this release again -->
    <antcall target="copyBuildFiles">
      <param name="module.release.dir" value="${wayf.release.dir}" />
      <param name="properties.file" value="${release.properties.dir}/wayf.release.properties" />
    </antcall>

    <!-- Tidy up -->
    <delete file="${wayf.release.dir}/guanxi-wayf-bin-${release.version}.tar" />
    <delete dir="${wayf.release.dir}/guanxi-wayf-bin-${release.version}" />
    <delete file="${wayf.release.dir}/guanxi-wayf-src-${release.version}.tar" />
    <delete dir="${wayf.release.dir}/guanxi-wayf-src-${release.version}" />
  </target>

  <target name="release-samuel" description="Builds a release of SAMUEL">

    <!-- Where the SAMUEL release files will be -->
    <property name="samuel.release.dir" value="samuel-bin-${release.version}" />

    <echo>
      Building SAMUEL ${release.version} on ${release.date}

      Using tags:
        -- Guanxi::Core   : ${release.core.cvs.tag}
        -- SAMUEL         : ${release.samuel.cvs.tag}
        -- gx_lib         : ${release.gx_lib.cvs.tag}
    </echo>

    <delete dir="${tmp.dir}" />
    <mkdir dir="${samuel.release.dir}" />
    <mkdir dir="${tmp.dir}" />

    <!-- Get the common modules from CVS -->
    <antcall target="getCommonModules" />

    <!-- Get SAMUEL from CVS -->
    <cvs cvsRoot="${cvs.root}"
         package="samuel"
         tag="${release.samuel.cvs.tag}"
         dest="${tmp.dir}" />

    <!-- Clean out any old builds -->
    <ant antfile="build.xml" dir="${tmp.dir}/${tmp.samuel.home}" target="clean"/>

    <!-- Build a source release archive -->
    <copy todir="${samuel.release.dir}/samuel-src-${release.version}">
      <fileset dir="${tmp.dir}">
        <include name="${tmp.guanxi-core.home}/**"/>
        <include name="${tmp.samuel.home}/**"/>
        <include name="${tmp.guanxi-gx_lib.home}/**"/>
      </fileset>
    </copy>
    <tar tarfile="${samuel.release.dir}/samuel-src-${release.version}.tar">
      <tarfileset dir="${samuel.release.dir}">
        <include name="samuel-src-${release.version}/**"/>
      </tarfileset>
    </tar>
    <gzip zipfile="${samuel.release.dir}/samuel-src-${release.version}.tar.gz" src="${samuel.release.dir}/samuel-src-${release.version}.tar" />

    <!-- Use the Core module to build SAMUEL -->
    <ant antfile="build.xml" dir="${core.dir}" target="samuel"/>

    <!-- Build a binary release archive -->
    <copy todir="${samuel.release.dir}/samuel-bin-${release.version}">
      <fileset dir="${tmp.dir}/${tmp.samuel.bin.dir}">
        <include name="**"/>
      </fileset>
    </copy>
    <tar tarfile="${samuel.release.dir}/samuel-bin-${release.version}.tar">
      <tarfileset dir="${samuel.release.dir}">
        <include name="samuel-bin-${release.version}/**"/>
      </tarfileset>
    </tar>
    <gzip zipfile="${samuel.release.dir}/samuel-bin-${release.version}.tar.gz" src="${samuel.release.dir}/samuel-bin-${release.version}.tar" />

    <!-- Copy the config files to build this release again -->
    <antcall target="copyBuildFiles">
      <param name="module.release.dir" value="${samuel.release.dir}" />
      <param name="properties.file" value="${release.properties.dir}/samuel.release.properties" />
    </antcall>

    <!-- Tidy up -->
    <delete file="${samuel.release.dir}/samuel-bin-${release.version}.tar" />
    <delete dir="${samuel.release.dir}/samuel-bin-${release.version}" />
    <delete file="${samuel.release.dir}/samuel-src-${release.version}.tar" />
    <delete dir="${samuel.release.dir}/samuel-src-${release.version}" />
  </target>

  <target name="release-guanxi-src" description="Builds a release of the Guanxi source">

    <!-- Where the IdP release files will be -->
    <property name="gx-src.release.dir" value="guanxi-src-release-${release.version}" />

    <echo>
      Releasing Guanxi source ${release.version} on ${release.date}

      Using tags:
        -- Guanxi::IdP    : ${release.idp.cvs.tag}
        -- Guanxi::SP     : ${release.sp.cvs.tag}
        -- Guanxi::Core   : ${release.core.cvs.tag}
        -- Guanxi::Common : ${release.common.cvs.tag}
        -- SAMUEL         : ${release.samuel.cvs.tag}
        -- gx_lib         : ${release.gx_lib.cvs.tag}
    </echo>

    <delete dir="${tmp.dir}" />
    <mkdir dir="${gx-src.release.dir}" />
    <mkdir dir="${tmp.dir}" />

    <!-- Get all the modules from CVS -->
    <antcall target="getCommonModules" />
    <antcall target="getIdP" />
    <antcall target="getSP" />
    <antcall target="getWAYF" />

    <!-- Clean out any old builds -->
    <ant antfile="build.xml" dir="${core.dir}" target="clean"/>

    <!-- Build a source release archive -->
    <copy todir="${gx-src.release.dir}/guanxi-src-${release.version}">
      <fileset dir="${tmp.dir}">
        <include name="**"/>
      </fileset>
    </copy>
    <tar tarfile="${gx-src.release.dir}/guanxi-src-${release.version}.tar">
      <tarfileset dir="${gx-src.release.dir}">
        <include name="guanxi-src-${release.version}/**"/>
      </tarfileset>
    </tar>
    <gzip zipfile="${gx-src.release.dir}/guanxi-src-${release.version}.tar.gz" src="${gx-src.release.dir}/guanxi-src-${release.version}.tar" />

    <!-- Copy the config files to build this release again -->
    <antcall target="copyBuildFiles">
      <param name="module.release.dir" value="${idp.release.dir}" />
      <param name="properties.file" value="${release.properties.dir}/gx-src.release.properties" />
    </antcall>

    <!-- Tidy up -->
    <delete file="${gx-src.release.dir}/guanxi-src-${release.version}.tar" />
    <delete dir="${gx-src.release.dir}/guanxi-src-${release.version}" />
  </target>

  <target name="getCommonModules" description="Checks out the modules required by the main Guanxi components">
    <!-- Get Guanxi::Core from CVS -->
    <cvs cvsRoot="${cvs.root}"
         package="Core"
         tag="${release.core.cvs.tag}"
         dest="${tmp.dir}" />

    <!-- Get Guanxi::Common from CVS -->
    <cvs cvsRoot="${cvs.root}"
         package="Common"
         tag="${release.common.cvs.tag}"
         dest="${tmp.dir}" />

    <!-- Get SAMUEL from CVS -->
    <cvs cvsRoot="${cvs.root}"
         package="samuel"
         tag="${release.samuel.cvs.tag}"
         dest="${tmp.dir}" />

    <!-- Get gx_lib from CVS -->
    <cvs cvsRoot="${cvs.root}"
         package="gx_lib"
         tag="${release.gx_lib.cvs.tag}"
         dest="${tmp.dir}" />
  </target>

  <target name="getIdP" description="Checks out the IdP from CVS">
    <!-- Get Guanxi::IdP from CVS -->
    <cvs cvsRoot="${cvs.root}"
         package="IdP"
         tag="${release.idp.cvs.tag}"
         dest="${tmp.dir}" />
  </target>

  <target name="getSP" description="Checks out the SP from CVS">
    <!-- Get Guanxi::SP from CVS -->
    <cvs cvsRoot="${cvs.root}"
         package="SP"
         tag="${release.sp.cvs.tag}"
         dest="${tmp.dir}" />
  </target>

  <target name="getWAYF" description="Checks out the WAYF from CVS">
    <cvs cvsRoot="${cvs.root}"
         package="WAYF"
         tag="${release.wayf.cvs.tag}"
         dest="${tmp.dir}" />
  </target>

  <target name="copyBuildFiles" description="Copies the files used to create the release">
    <copy file="build.xml" toDir="${module.release.dir}/config" />
    <copy file="build.properties" toDir="${module.release.dir}/config" />
    <copy file="${properties.file}" toDir="${module.release.dir}/config/${release.properties.dir}" />
  </target>
</project>
